{"version":3,"file":"static/js/360.a4cf7d95.chunk.js","mappings":"4TA2FA,EAvEuB,WACrB,IAAAA,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAASF,EAAA,GAAEG,EAAUH,EAAA,GAC5BI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEoB,OAFpBF,EAAAC,KAAA,EAEGb,GAAW,GAAMY,EAAAE,KAAA,GACIC,EAAAA,EAAAA,MAAoB,KAAD,EAAlCZ,EAAMS,EAAAI,KACZZ,EAAUD,GAAQS,EAAAE,KAAA,sBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEZ,IAAIM,MAAMN,EAAAK,GAAME,SAAS,KAAD,GAEZ,OAFYP,EAAAC,KAAA,GAE9Bb,GAAW,GAAOY,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,uBARtBF,EAWF,GAAG,KAGDc,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CAAAC,UACZF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAAAD,UACRF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAAAF,SACDzB,GAuCAuB,EAAAA,EAAAA,KAACK,EAAAA,EAAM,IAtCPxB,GACAA,EAAOyB,KACL,SAAAC,GAAA,IACEC,EAAED,EAAFC,GACAC,EAAKF,EAALE,MACAC,EAAWH,EAAXG,YACAC,EAAYJ,EAAZI,aACAC,EAAiBL,EAAjBK,kBACAC,EAAcN,EAAdM,eAAc,OAEdb,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAAAZ,UACHF,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKT,GAAMU,MAAO,CAAEC,KAAMpC,GAAWmB,UAC3CkB,EAAAA,EAAAA,MAACC,EAAAA,GAAU,CAAAnB,SAAA,EACTF,EAAAA,EAAAA,KAACsB,EAAAA,GAAG,CACFC,IAAG,kCAAAN,OAAoCP,GACvCc,IAAKf,EACLgB,QAAS,SAAAC,GACPA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOJ,IAAMM,CACjB,KAEFT,EAAAA,EAAAA,MAACU,EAAAA,GAAS,CAAA5B,SAAA,EACRkB,EAAAA,EAAAA,MAACW,EAAAA,GAAK,CAAA7B,SAAA,CAAC,IAAEO,GAAgBI,MACzBO,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAAA9B,SAAA,EACHF,EAAAA,EAAAA,KAACiC,EAAAA,GAAM,CAAA/B,SAAC,YACPS,MAEHS,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAAA9B,SAAA,EACHF,EAAAA,EAAAA,KAACiC,EAAAA,GAAM,CAAA/B,SAAC,gBACRF,EAAAA,EAAAA,KAACkC,EAAAA,GAAS,CAAAhC,SAAEU,gBAnBXJ,EAwBJ,SAUvB,E,mBCvFa2B,EAAcC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4GAOxBP,EAAQK,EAAAA,EAAAA,GAASG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,uGCG9B,EATa,WACX,OACElB,EAAAA,EAAAA,MAACe,EAAW,CAAAjC,SAAA,EACVF,EAAAA,EAAAA,KAAC+B,EAAK,CAAA7B,SAAC,0BACPF,EAAAA,EAAAA,KAACwC,EAAc,MAGrB,C","sources":["components/TrendingMovies/TrendingMovies.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nimport { getTrendingMovies } from 'api/movies';\nimport { useEffect, useState } from 'react';\nimport {\n  List,\n  Item,\n  MoviesWrapper,\n  MovieThumb,\n  Img,\n  MovieInfo,\n  Accent,\n  UpperText,\n} from './TrendingMovies.styled';\nimport Container from 'components/Container';\nimport Loader from 'components/Loader/Loader';\nimport { Title, Text } from './TrendingMovies.styled';\n\nimport fallbackImageUrl from 'img/fallback-280.png';\n\nconst TrendingMovies = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setLoading(true);\n        const movies = await getTrendingMovies();\n        setMovies(movies);\n      } catch (error) {\n        throw new Error(error.message);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <MoviesWrapper>\n      <Container>\n        <List>\n          {!isLoading ? (\n            movies &&\n            movies.map(\n              ({\n                id,\n                title,\n                poster_path,\n                vote_average,\n                original_language,\n                original_title,\n              }) => (\n                <Item key={id}>\n                  <Link to={`${id}`} state={{ from: location }}>\n                    <MovieThumb>\n                      <Img\n                        src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                        alt={title}\n                        onError={e => {\n                          e.target.onerror = null;\n                          e.target.src = fallbackImageUrl;\n                        }}\n                      />\n                      <MovieInfo>\n                        <Title> {title ? title : original_title}</Title>\n                        <Text>\n                          <Accent>score: </Accent>\n                          {vote_average}\n                        </Text>\n                        <Text>\n                          <Accent>language: </Accent>\n                          <UpperText>{original_language}</UpperText>\n                        </Text>\n                      </MovieInfo>\n                    </MovieThumb>\n                  </Link>\n                </Item>\n              )\n            )\n          ) : (\n            <Loader />\n          )}\n        </List>\n      </Container>\n    </MoviesWrapper>\n  );\n};\n\nexport default TrendingMovies;\n","import styled from '@emotion/styled';\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-bottom: 20px;\n`;\n\nexport const Title = styled.h1`\n  margin: 0;\n\n  text-transform: uppercase;\n  align-self: center;\n  margin-bottom: 20px;\n`;\n","import TrendingMovies from 'components/TrendingMovies';\nimport { PageWrapper, Title } from './Home.styled';\n\nconst Home = () => {\n  return (\n    <PageWrapper>\n      <Title>trending films today</Title>\n      <TrendingMovies />\n    </PageWrapper>\n  );\n};\n\nexport default Home;\n"],"names":["_useState","useState","_useState2","_slicedToArray","isLoading","setLoading","_useState3","_useState4","movies","setMovies","location","useLocation","useEffect","_asyncToGenerator","_regeneratorRuntime","_callee","_movies","_context","prev","next","getTrendingMovies","sent","t0","Error","message","finish","stop","_jsx","MoviesWrapper","children","Container","List","Loader","map","_ref2","id","title","poster_path","vote_average","original_language","original_title","Item","Link","to","concat","state","from","_jsxs","MovieThumb","Img","src","alt","onError","e","target","onerror","fallbackImageUrl","MovieInfo","Title","Text","Accent","UpperText","PageWrapper","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","TrendingMovies"],"sourceRoot":""}