{"version":3,"file":"static/js/823.451980d2.chunk.js","mappings":"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","sources":["components/SearchMovies/SearchMovies.styled.js","components/SearchMovies/SearchMovies.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { IoMdSearch } from 'react-icons/io';\n\nexport const SearchWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  margin-bottom: 40px;\n`;\n\nexport const Search = styled.input`\n  width: 300px;\n  padding: 10px 26px;\n  background-color: #323232;\n  border: 2px solid #b4b7b9;\n  border-radius: 4px;\n\n  color: #f7eee8;\n\n  &:focus {\n    outline: none;\n    border-color: #fcff00;\n  }\n`;\n\nexport const SearchIcon = styled(IoMdSearch)`\n  position: absolute;\n  top: 12px;\n  left: 8px;\n`;\n\nexport const SearchButton = styled.button`\n  position: absolute;\n  height: 100%;\n  padding: 0 12px;\n  right: 0;\n\n  border: 2px solid #00000000;\n  background-color: #00000000;\n  color: #b4b7b9;\n  border-left: 2px solid #b4b7b9;\n  border-bottom-right-radius: 4px;\n  border-top-right-radius: 4px;\n\n  cursor: pointer;\n\n  text-transform: uppercase;\n  transition: background 250ms ease-in-out, color 250ms ease-in-out,\n    border 250ms ease-in-out;\n\n  &:focus {\n    background-color: #fcff00;\n    color: #323232;\n  }\n\n  &:hover {\n    background-color: #fcff00;\n    color: #323232;\n  }\n\n  &:active {\n    background-color: #55555500;\n    color: #fcff00;\n  }\n`;\n","// import { useSearchParams } from 'react-router-dom';\nimport {\n  SearchWrapper,\n  Label,\n  Search,\n  SearchButton,\n} from './SearchMovies.styled';\nimport { SearchIcon } from './SearchMovies.styled';\nimport { useState } from 'react';\n\nconst SearchMovies = ({ updateQuery }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  return (\n    <SearchWrapper>\n      <Label>\n        <Search\n          type=\"text\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.currentTarget.value)}\n        />\n        <SearchIcon />\n        <SearchButton onClick={() => updateQuery(searchQuery)} type=\"button\">\n          Search\n        </SearchButton>\n      </Label>\n    </SearchWrapper>\n  );\n};\n\nexport default SearchMovies;\n","import { findMoviesByName } from 'api/movies';\nimport SearchMovies from 'components/SearchMovies';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport {\n  List,\n  Item,\n  MoviesWrapper,\n  MovieThumb,\n  Img,\n  Accent,\n  MovieInfo,\n  UpperText,\n  Text,\n  Title,\n} from 'components/TrendingMovies/TrendingMovies.styled';\n\nimport fallbackImageUrl from 'img/fallback-280.png';\n\nconst Movies = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const query = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    try {\n      (async () => {\n        const movies = await findMoviesByName(query);\n        setMovies(movies);\n      })();\n    } catch (error) {\n      throw new Error(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [query]);\n\n  const updateQueryString = query => {\n    const nextQuery = query !== '' ? { query } : {};\n    setSearchParams(nextQuery);\n  };\n\n  return (\n    <div>\n      <SearchMovies query={query} updateQuery={updateQueryString} />\n\n      {!isLoading && (\n        <List>\n          {movies.map(\n            ({\n              id,\n              title,\n              poster_path,\n              vote_average,\n              original_title,\n              original_language,\n            }) => (\n              <Item key={id}>\n                <MoviesWrapper key={id}>\n                  <MovieThumb>\n                    <Link to={`${id}`} state={{ from: location }}>\n                      <Img\n                        src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                        alt={title}\n                        onError={e => {\n                          e.target.onerror = null;\n                          e.target.src = fallbackImageUrl;\n                        }}\n                      />\n                      <MovieInfo>\n                        <Title> {title ? title : original_title}</Title>\n                        <Text>\n                          <Accent>score: </Accent>\n                          {vote_average}\n                        </Text>\n                        <Text>\n                          <Accent>language: </Accent>\n                          <UpperText>{original_language}</UpperText>\n                        </Text>\n                      </MovieInfo>\n                    </Link>\n                  </MovieThumb>\n                </MoviesWrapper>\n              </Item>\n            )\n          )}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchWrapper","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Search","_templateObject3","SearchIcon","IoMdSearch","_templateObject4","SearchButton","_templateObject5","_ref","updateQuery","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_jsx","children","_jsxs","type","value","onChange","e","currentTarget","onClick","_searchParams$get","isLoading","setLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","movies","setMovies","query","get","location","useLocation","useEffect","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","findMoviesByName","sent","stop","error","Error","message","SearchMovies","List","map","_ref2","id","title","poster_path","vote_average","original_title","original_language","Item","MoviesWrapper","MovieThumb","Link","to","concat","state","from","Img","src","alt","onError","target","onerror","fallbackImageUrl","MovieInfo","Title","Text","Accent","UpperText"],"sourceRoot":""}